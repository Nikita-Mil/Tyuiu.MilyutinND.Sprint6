<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxUsl_GVE.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zEY4AAAAAElFTkSuQmCC
</value>
  </data>
</root>