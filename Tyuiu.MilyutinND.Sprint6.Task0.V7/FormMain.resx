<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxTask_IAA.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>